name: update_env_infrustructure

on:
  workflow_dispatch:
    inputs:
      dispatch_id:
        description: 'A unique ID provided when dispatching this workflow'
        required: false
        type: string
  push:
    branches:
      - 'dev'
      - 'test'
      - 'main'   

jobs:  
  dispatch-id:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.dispatch_id != ''
    runs-on: [ ubuntu-latest ]
    steps:
      - id: dispatch-id
        name: ${{ github.event.inputs.dispatch_id }}
        run: echo "The dispatch ID is ${{ github.event.inputs.dispatch_id }}"

  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name == 'main' && 'prod' || github.ref_name }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false      

      - name: Terraform Init
        id: init
        run: |
          echo "The gihub env is  ${{ github.ref_name == 'main' && 'prod' || github.ref_name }} "
          export ARM_CLIENT_ID=$ARM_CLIENT_ID
          export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
          export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
          export ARM_TENANT_ID=$ARM_TENANT_ID
          
          terraform init --backend-config="resource_group_name=rg-infrastructure-${{ github.ref_name == 'main' && 'prod' || github.ref_name }}" --backend-config="storage_account_name=infrastatic${{ github.ref_name == 'main' && 'prod' || github.ref_name }}" --backend-config="container_name=terraformstatefiles" --backend-config="key=${{ vars.AZ_ENV_NAME }}-${{ github.ref_name == 'main' && 'prod' || github.ref_name }}-${{ vars.AZ_ENV_SUFIX }}" 
        env:     
          ARM_CLIENT_ID: ${{secrets.AZ_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.AZ_CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZ_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.AZ_TENANT_ID}} 
          TF_VAR_az_env_name: ${{ vars.AZ_ENV_NAME }}
          TF_VAR_az_env_sufix: ${{ vars.AZ_ENV_SUFIX }}
          TF_VAR_az_subscription_name: ${{ github.ref_name }}
              
      - name: Terraform Validate
        id: validate
        run:  |
          export ARM_CLIENT_ID=$ARM_CLIENT_ID
          export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
          export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
          export ARM_TENANT_ID=$ARM_TENANT_ID
          terraform validate -no-color 
        env:
          ARM_CLIENT_ID: ${{secrets.AZ_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.AZ_CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZ_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.AZ_TENANT_ID}} 
          TF_VAR_az_env_name: ${{ vars.AZ_ENV_NAME }}
          TF_VAR_az_env_sufix: ${{ vars.AZ_ENV_SUFIX }}
          TF_VAR_az_subscription_name: ${{ github.ref_name }}

      - name: Terraform Plan
        id: plan
        run: |
          export ARM_CLIENT_ID=$ARM_CLIENT_ID
          export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
          export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
          export ARM_TENANT_ID=$ARM_TENANT_ID
          terraform plan -no-color -input=false 
        continue-on-error: true  
        env:
          ARM_CLIENT_ID: ${{secrets.AZ_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.AZ_CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZ_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.AZ_TENANT_ID}} 
          TF_VAR_az_env_name: ${{ vars.AZ_ENV_NAME }}
          TF_VAR_az_env_sufix: ${{ vars.AZ_ENV_SUFIX }}
          TF_VAR_az_subscription_name: ${{ github.ref_name }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply        
        run: |
          export ARM_CLIENT_ID=$ARM_CLIENT_ID
          export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
          export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
          export ARM_TENANT_ID=$ARM_TENANT_ID
          terraform apply -auto-approve -input=false
        env:
          ARM_CLIENT_ID: ${{secrets.AZ_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.AZ_CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZ_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.AZ_TENANT_ID}} 
          TF_VAR_az_env_name: ${{ vars.AZ_ENV_NAME }}
          TF_VAR_az_env_sufix: ${{ vars.AZ_ENV_SUFIX }}
          TF_VAR_az_subscription_name: ${{ github.ref_name }}